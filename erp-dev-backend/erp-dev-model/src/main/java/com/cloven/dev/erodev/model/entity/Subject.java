package com.cloven.dev.erodev.model.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedEnum;
import com.cloven.dev.erpdev.model.utils.StatusEnum;

import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@DynamoDBTable(tableName = "erp_subject")
@Builder
@Data
@DynamoDBDocument
public class Subject {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private Integer subjectId;

	private String subjectName;

	@DynamoDBAttribute(attributeName = "batch_id")
	private Integer batchId;

	@DynamoDBAttribute(attributeName = "class_id")
	private Integer classId;

	@DynamoDBAttribute(attributeName = "section_id")
	private Integer sectionId;

	@DynamoDBTypeConvertedEnum
	@DynamoDBAttribute(attributeName = "subjectstatus")
	private StatusEnum status;
	
	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
	private String createdAt;

	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
	private String updateAt;

}
