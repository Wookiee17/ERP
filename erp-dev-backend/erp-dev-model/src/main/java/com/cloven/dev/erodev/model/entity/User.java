package com.cloven.dev.erodev.model.entity;

import java.util.List;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;

import org.springframework.security.core.GrantedAuthority;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.cloven.dev.erpdev.model.utils.Constants;
import com.cloven.dev.erpdev.model.utils.GenderEnum;
import com.cloven.dev.erpdev.model.utils.UserTypeEnum;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedEnum;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.fasterxml.jackson.annotation.JsonFormat;

import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@DynamoDBTable(tableName = "erp_user")
@Builder
@Data
@DynamoDBDocument
public class User {

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	private String userId;

	@DynamoDBAttribute(attributeName = "firstname")
	private String firstName;

	@DynamoDBAttribute(attributeName = "lastname")
	private String lastName;

	@Email
	@DynamoDBAttribute(attributeName = "email")
	private String email;

	@NotNull
	@DynamoDBAttribute(attributeName = "username")
	private String username;

	@DynamoDBTyped(DynamoDBAttributeType.L)
	private final List<GrantedAuthority> authorities;

	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
	private String createdAt;

	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
	private String updateAt;

	@DynamoDBTypeConvertedEnum
	@DynamoDBAttribute(attributeName = "user_type")
	private UserTypeEnum userType;

	private Address permanentaddressId;

	private Address correspondentAddressId;

	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = Constants.UI_DATE_TIME_FORMAT)
	private String dateOfBirth;

	@DynamoDBTypeConvertedEnum
	@DynamoDBAttribute(attributeName = "gender")
	private GenderEnum gender;
}